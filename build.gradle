plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id("io.freefair.lombok") version "8.13.1"
}

group = 'nocast'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springModulithVersion', "1.3.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.modulith:spring-modulith-starter-core'
//  implementation 'org.springframework.modulith:spring-modulith-starter-jpa'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.9.9'
	implementation 'org.liquibase:liquibase-core'
	implementation 'javax.servlet:servlet-api:2.5'
	implementation 'org.postgresql:postgresql'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.servlet:javax.servlet-api:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.session:spring-session-data-redis'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'jakarta.validation:jakarta.validation-api:2.0.1'


//	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

//	testImplementation 'org.springframework.security:spring-security-test'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.modulith:spring-modulith-starter-test'
	testImplementation 'org.springframework.modulith:spring-modulith-junit'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
